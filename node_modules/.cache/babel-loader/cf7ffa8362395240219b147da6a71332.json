{"remainingRequest":"/home/matt/vuejs/email-editor/vue-email-editor/node_modules/babel-loader/lib/index.js!/home/matt/vuejs/email-editor/vue-email-editor/node_modules/eslint-loader/index.js??ref--13-0!/home/matt/vuejs/email-editor/vue-email-editor/src/components/loadScript.js","dependencies":[{"path":"/home/matt/vuejs/email-editor/vue-email-editor/src/components/loadScript.js","mtime":1612431167948},{"path":"/home/matt/vuejs/email-editor/vue-email-editor/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matt/vuejs/email-editor/vue-email-editor/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matt/vuejs/email-editor/vue-email-editor/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nvar scriptUrl = '//editor.unlayer.com/embed.js?2';\nvar callbacks = [];\nvar loaded = false;\n\nvar isScriptInjected = function isScriptInjected() {\n  var scripts = document.querySelectorAll('script');\n  var injected = false;\n  scripts.forEach(function (script) {\n    if (script.src.includes(scriptUrl)) {\n      injected = true;\n    }\n  });\n  return injected;\n};\n\nvar addCallback = function addCallback(callback) {\n  callbacks.push(callback);\n};\n\nvar runCallbacks = function runCallbacks() {\n  if (loaded) {\n    var callback;\n\n    while (callback = callbacks.shift()) {\n      callback();\n    }\n  }\n};\n\nexport var loadScript = function loadScript(callback) {\n  addCallback(callback);\n\n  if (!isScriptInjected()) {\n    var embedScript = document.createElement('script');\n    embedScript.setAttribute('src', scriptUrl);\n\n    embedScript.onload = function () {\n      loaded = true;\n      runCallbacks();\n    };\n\n    document.head.appendChild(embedScript);\n  } else {\n    runCallbacks();\n  }\n};",{"version":3,"sources":["/home/matt/vuejs/email-editor/vue-email-editor/src/components/loadScript.js"],"names":["scriptUrl","callbacks","loaded","isScriptInjected","scripts","document","querySelectorAll","injected","forEach","script","src","includes","addCallback","callback","push","runCallbacks","shift","loadScript","embedScript","createElement","setAttribute","onload","head","appendChild"],"mappings":";;;AAAA,IAAMA,SAAS,GAAG,iCAAlB;AACA,IAAMC,SAAS,GAAG,EAAlB;AACA,IAAIC,MAAM,GAAG,KAAb;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,MAAMC,OAAO,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,CAAhB;AACA,MAAIC,QAAQ,GAAG,KAAf;AAEAH,EAAAA,OAAO,CAACI,OAAR,CAAgB,UAACC,MAAD,EAAY;AAC1B,QAAIA,MAAM,CAACC,GAAP,CAAWC,QAAX,CAAoBX,SAApB,CAAJ,EAAoC;AAClCO,MAAAA,QAAQ,GAAG,IAAX;AACD;AACF,GAJD;AAMA,SAAOA,QAAP;AACD,CAXD;;AAaA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AAChCZ,EAAAA,SAAS,CAACa,IAAV,CAAeD,QAAf;AACD,CAFD;;AAIA,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,MAAIb,MAAJ,EAAY;AACV,QAAIW,QAAJ;;AAEA,WAAQA,QAAQ,GAAGZ,SAAS,CAACe,KAAV,EAAnB,EAAuC;AACrCH,MAAAA,QAAQ;AACT;AACF;AACF,CARD;;AAUA,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACJ,QAAD,EAAc;AACtCD,EAAAA,WAAW,CAACC,QAAD,CAAX;;AAEA,MAAI,CAACV,gBAAgB,EAArB,EAAyB;AACvB,QAAMe,WAAW,GAAGb,QAAQ,CAACc,aAAT,CAAuB,QAAvB,CAApB;AACAD,IAAAA,WAAW,CAACE,YAAZ,CAAyB,KAAzB,EAAgCpB,SAAhC;;AACAkB,IAAAA,WAAW,CAACG,MAAZ,GAAqB,YAAM;AACzBnB,MAAAA,MAAM,GAAG,IAAT;AACAa,MAAAA,YAAY;AACb,KAHD;;AAIAV,IAAAA,QAAQ,CAACiB,IAAT,CAAcC,WAAd,CAA0BL,WAA1B;AACD,GARD,MAQO;AACLH,IAAAA,YAAY;AACb;AACF,CAdM","sourcesContent":["const scriptUrl = '//editor.unlayer.com/embed.js?2';\nconst callbacks = [];\nlet loaded = false;\n\nconst isScriptInjected = () => {\n  const scripts = document.querySelectorAll('script');\n  let injected = false;\n\n  scripts.forEach((script) => {\n    if (script.src.includes(scriptUrl)) {\n      injected = true;\n    }\n  });\n\n  return injected;\n};\n\nconst addCallback = (callback) => {\n  callbacks.push(callback);\n};\n\nconst runCallbacks = () => {\n  if (loaded) {\n    let callback;\n\n    while ((callback = callbacks.shift())) {\n      callback();\n    }\n  }\n};\n\nexport const loadScript = (callback) => {\n  addCallback(callback);\n\n  if (!isScriptInjected()) {\n    const embedScript = document.createElement('script');\n    embedScript.setAttribute('src', scriptUrl);\n    embedScript.onload = () => {\n      loaded = true;\n      runCallbacks();\n    };\n    document.head.appendChild(embedScript);\n  } else {\n    runCallbacks();\n  }\n};\n"]}]}